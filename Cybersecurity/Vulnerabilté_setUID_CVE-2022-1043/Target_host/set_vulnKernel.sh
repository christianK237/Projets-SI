#!/bin/bash


# repertoire temporaire 
TEMP_DIR="/tmp/kernel_setup"
mkdir -p "$TEMP_DIR"

echo -e "téléchargement des fichiers nécessaires pour le noyau...\n"
cd "$TEMP_DIR" || exit

# la version du noyau neccessite libssl1.1
LIBSSL_URL="http://ftp.de.debian.org/debian/pool/main/o/openssl/libssl1.1_1.1.1w-0+deb11u1_amd64.deb"
# URLs des modules noyau
URL1="https://kernel.ubuntu.com/mainline/v5.12-rc6/amd64/linux-headers-5.12.0-051200rc6_5.12.0-051200rc6.202104042231_all.deb"
URL2="https://kernel.ubuntu.com/mainline/v5.12-rc6/amd64/linux-headers-5.12.0-051200rc6-generic_5.12.0-051200rc6.202104042231_amd64.deb"
URL3="https://kernel.ubuntu.com/mainline/v5.12-rc6/amd64/linux-image-unsigned-5.12.0-051200rc6-generic_5.12.0-051200rc6.202104042231_amd64.deb"
URL4="https://kernel.ubuntu.com/mainline/v5.12-rc6/amd64/linux-modules-5.12.0-051200rc6-generic_5.12.0-051200rc6.202104042231_amd64.deb"

# telécharger les fichiers du noyau
echo -e "download from : $URL1\n"
wget -q "$URL1" || { echo "Erreur de téléchargement de $URL1"; exit 1; }

echo -e "download from  : $URL2\n"
wget -q "$URL2" || { echo "Erreur de téléchargement de $URL2"; exit 1; }

echo -e "download from  : $URL3\n"
wget -q "$URL3" || { echo "Erreur de téléchargement de $URL3"; exit 1; }

echo -e "download from  : $URL4\n"
wget -q "$URL4" || { echo "Erreur de téléchargement de $URL4"; exit 1; }


# télécharger && installer libssl1.1
echo -e "téléchargement de libssl1.1...\n"
wget -q "$LIBSSL_URL" || { echo "erreur de téléchargement de libssl1.1"; exit 1; }
echo -e "installation de libssl1.1...\n"
sudo dpkg -i libssl1.1_1.1.1w-0+deb11u1_amd64.deb || { echo "erreur d'installation de libssl1.1"; exit 1; }

# installer les modules et headers du noyau
echo -e "installation des modules et headers du noyau...\n"

DEB1="linux-headers-5.12.0-051200rc6_5.12.0-051200rc6.202104042231_all.deb"
echo -e "\n\n installation de $DEB1...........\n"
sudo dpkg -i "$DEB1" || { echo "erreur d'installation de $DEB1"; exit 1; }

DEB2="linux-headers-5.12.0-051200rc6-generic_5.12.0-051200rc6.202104042231_amd64.deb"
echo -e "\n\n installation de $DEB2.............\n"
sudo dpkg -i "$DEB2" || { echo "erreur d'installation de $DEB2"; exit 1; }

DEB3="linux-modules-5.12.0-051200rc6-generic_5.12.0-051200rc6.202104042231_amd64.deb"
echo -e "\n\n installation de $DEB3...........\n"
sudo dpkg -i "$DEB3" || { echo "erreur d'installation de $DEB3"; }
# sudo apt-get install -f -y || { echo "erreur de résolution des dépendances"; exit 1; } }

DEB4="linux-image-unsigned-5.12.0-051200rc6-generic_5.12.0-051200rc6.202104042231_amd64.deb"
echo -e "\n\n installation de $DEB4.............\n"
sudo dpkg -i "$DEB4" || { echo "erreur d'installation de $DEB4";}

# forcer les dépendances 
echo -e "\n\n forçage des dépendances manquantes..............\n"
sudo apt-get install -f -y || { echo "erreur de résolution des dépendances"; exit 1; }
# mise a jour 
#sudo apt-get update && sudo apt-get upgrade
# update du GRUB
echo -e "mise à jour de GRUB...\n"
sudo update-grub || { echo "erreur de mise à jour du GRUB"; exit 1; }

# utilisateur non privilégié
USER_NAME1="vulnUser1"
echo -e "création d'un utilisateur non privilégié : $USER_NAME1\n"
sudo useradd -ms /bin/bash "$USER_NAME1" || { echo "erreur de création de $USER_NAME1"; exit 1; }
echo "$USER_NAME1:vulnUser1" | sudo chpasswd || { echo "erreur de définition du passwd"; exit 1; }

# deuxieme user non privilégié
USER_NAME2="vulnUser2"
echo -e "création d'un utilisateur non privilégié : $USER_NAME2\n"
sudo useradd -ms /bin/bash "$USER_NAME2" || { echo "erreur de création de $USER_NAME2"; exit 1; }
echo "$USER_NAME2:vulnUser2" | sudo chpasswd || { echo "erreur de définition du passwd"; exit 1; }

# chmod sur les .sh
echo "chmod sur /sharedFolder/*.sh"
for script in /sharedFolder/*.sh; do
    if [ -f "$script" ]; then
        sudo chmod +x "$script"
    fi
done

# placer les scripts pour vulnUser1 && vulnUser2
sudo mkdir -p /home/vulnUser1/execs /home/vulnUser2/execs
sudo cp -r /sharedFolder/* /home/vulnUser1/execs/ 
sudo cp -r /sharedFolder/* /home/vulnUser2/execs/
sudo mkdir -p /home/$(whoami)/execs 
sudo cp -r /sharedFolder/* /home/$(whoami)/execs/
 
# placer exploit pour vulnUser1 && vulnUser2
gcc -pthread /sharedFolder/cve-2022-1043.c -o cve-2022-1043
chmod +x cve-2022-1043
sudo cp cve-2022-1043 /home/vulnUser1/execs/ && sudo chown -R vulnUser1:vulnUser1 /home/vulnUser1/execs
sudo cp cve-2022-1043 /home/vulnUser2/execs/ && sudo chown -R vulnUser2:vulnUser2 /home/vulnUser2/execs
#

#
echo -e "nettoyage des fichiers temporaires...\n"
rm -rf "$TEMP_DIR" || { echo "erreur de nettoyage des fichiers temporaires"; exit 1; }
echo -e "nettoyage terminé.\n"

# Redémarrer le système
echo -e "Redémarrage du système pour appliquer les modifications...\n"
sudo reboot

